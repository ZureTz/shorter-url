// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: url.sql

package repo

import (
	"context"
	"time"
)

const createURL = `-- name: CreateURL :one
insert into urls (
  original_url,
  short_code,
  is_custom,
  expired_at
) values (
  $1, $2, $3, $4
) returning id, original_url, short_code, is_custom, created_at, expired_at
`

type CreateURLParams struct {
	OriginalUrl string    `json:"original_url"`
	ShortCode   string    `json:"short_code"`
	IsCustom    bool      `json:"is_custom"`
	ExpiredAt   time.Time `json:"expired_at"`
}

func (q *Queries) CreateURL(ctx context.Context, arg CreateURLParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createURL,
		arg.OriginalUrl,
		arg.ShortCode,
		arg.IsCustom,
		arg.ExpiredAt,
	)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.OriginalUrl,
		&i.ShortCode,
		&i.IsCustom,
		&i.CreatedAt,
		&i.ExpiredAt,
	)
	return i, err
}

const isShortCodeAvailable = `-- name: IsShortCodeAvailable :one
select not exists (
  select 1 from urls where short_code = $1
) as is_available
`

func (q *Queries) IsShortCodeAvailable(ctx context.Context, shortCode string) (bool, error) {
	row := q.db.QueryRowContext(ctx, isShortCodeAvailable, shortCode)
	var is_available bool
	err := row.Scan(&is_available)
	return is_available, err
}
